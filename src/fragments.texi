@c Copyright (C) 1988-2015 Free Software Foundation, Inc.
@c This is part of the GCC manual.
@c For copying conditions, see the file gcc.texi.

@node Fragments
@chapter Makefile Fragments
@cindex makefile fragment

@file{configure} スクリプトを使って GCC のコンフィギュレーションを
行なうと、テンプレートファイル @file{Makefile.in} からファイル @file{Makefile}
を作成する。その際に、@file{config} ディレクトリから、@file{t-@var{target}}
と @file{x-@var{host}} という名前の makefile の断片ファイルを取り込む。
これらのファイルが存在しない場合は、そのターゲットやホスト向けに
何も追加する必要がないということを意味する。

@menu
* Target Fragment:: @file{t-@var{target}} ファイルの書き方
* Host Fragment::   @file{x-@var{host}} ファイルの書き方
@end menu

@node Target Fragment
@section Target Makefile Fragments
@cindex target makefile fragment
@cindex @file{t-@var{target}}

ターゲットの makefile 断片、@file{t-@var{target}} は、
@file{Makefile} で使われる、
特別なターゲット依存の変数と特別な make のターゲットを定義する。

@table @code
@findex LIBGCC1
@item LIBGCC1
@file{libgcc1.a} を構築するルール。
ターゲットが @file{libgcc1.a} の中の関数を必要としないのであれば、
空に設定すること。
@xref{Interface}.

@findex CROSS_LIBGCC1
@item CROSS_LIBGCC1
クロスコンパイラを作成するときに、@file{libgcc1.a} を構築するのに
使う規則である。ターゲットが @file{libgcc1.a} にある関数を
使う必要がない場合は、このマクロは空にする。
@xref{Cross Runtime}.

@findex LIBGCC2_CFLAGS
@item LIBGCC2_CFLAGS
@file{libgcc2.c} をコンパイルするときに使うコンパイラのフラグである。

@findex LIB2FUNCS_EXTRA
@item LIB2FUNCS_EXTRA
@file{libgcc.a} に、コンパイルまたはアセンブルして入れるべきファイルの
ソースファイル名のリストである。

@findex CRTSTUFF_T_CFLAGS
@item CRTSTUFF_T_CFLAGS
@file{crtsfuff.c} をコンパイルするときに使われる特別なフラグである。
@xref{Initialization}.

@findex CRTSTUFF_T_CFLAGS_S
@item CRTSTUFF_T_CFLAGS_S
共有リンク用に @file{crtstuff.c} をコンパイルするときに使われる
特別なフラグである。
@code{EXTRA-PARTS} で @file{crtbeginS.o} と @file{crtendS.o} を
使っている場合にはこのフラグが使われる。
@xref{Initialization}.

@findex MULTILIB_OPTIONS
@item MULTILIB_OPTIONS
ターゲットによっては、GCC を異なる起動の仕方をすると、
一緒にリンクできないオブジェクトが生成されることがある。
例えば、幾つかのターゲットでは、GCC がビッグエンディアンとリトル
エンディアン両方のコードを生成する。
こういうターゲットには、非互換なオプションの組合せに一つずつの、
複数のバージョンの @file{libgcc.a} をコンパイルするように設定しなければ
ならない。GCC がリンカを起動するとき、使われたコマンド行オプションに
応じて、正しいバージョンの @file{libgcc.a} をリンクするように調整する。

マクロ @code{MULTILIB_OPTIONS} には、@file{libgcc.a} の特別な
バージョンを構築しなければならない場合向けのオプションの組を列挙する。
互いに互換性のないオプションは、スラッシュで区切って並べて書く。
一緒に組み合わせて使うことも出来るオプションはスペースで区切って書く。
構築手順により、互換性のあるオプションの全ての組合せが構築される。

例えば、@code{MULTILIB_OPTIONS} を @samp{m68000/m68020 msoft-float} と
設定したとすると、@file{Makefile} は、@file{libgcc.a} の
特別なバージョンを、@samp{-m68000}、@samp{-m68020}、
@samp{-msoft-float}、@samp{-m68000 -msoft-float}、@samp{-m68020 -msoft-float}
というオプションの組合せの分だけ作る。

@findex MULTILIB_DIRNAMES
@item MULTILIB_DIRNAMES
@code{MULTILIB_OPTIONS} を使う場合、この変数で様々なライブラリを
置くのに使うべきディレクトリ名を指定する。@code{MULTILIB_OPTIONS} の
要素毎に @code{MULTILIB_DIRNAMES} に一つ要素を書くこと。
@code{MULTILIB_DIRNAMES} を使わない場合、デフォルト値は
@code{MULTILIB_OPTIONS} のスラッシュを全て空白として扱ったものになる。

例えば、@code{MULTILIB_OPTIONS} が @samp{m68000/m68020 msoft-float}
設定されている場合は、@code{MULTILIB_DIRNAMES} のデフォルト値は
@samp{m68000 m68020 msoft-float} となる。
ディレクトリ名として別の組合わせにしたい場合は
別の値を指定すれば良い。

@findex MULTILIB_MATCHES
@item MULTILIB_MATCHES
同じオプションを二つの別の書き方をすることもある。
あるオプションが @code{MULTILIB_OPTIONS} に列挙されている場合、
GCC はその別名について知る必要がある。その場合、
@code{MULTILIB_MATCHES} に、@samp{option=option} という形式の
項目のリストを設定し、全ての関係する別名を記述するようにする。
例えば、@samp{m68000=mc68000 m68020=mc68020} とする。

@findex MULTILIB_EXCEPTIONS
@item MULTILIB_EXCEPTIONS
複数の組の @code{MULTILIB_OPTIONS} が指定されている場合、
その中に構築すべきでない組合せが出てくる場合もある。
そういう場合は、@code{MULTILIB_EXCEPTIONS} を設定して、
構築すべきでないオプションの例外を全て、シェルの case 文の構文で
指定する。

例えば、PowerPC の組み込み ABI サポートでは、@samp{-mcall-aixdesc}
オプションと、 @samp{-mrelocatable} と @samp{-mlittle} オプションの
どちらかを同時に指定してコンパイルしたライブラリは構築しないのが
望ましい。このため、@code{MULTILIB_EXCEPTIONS} は
@code{*mrelocatable/*mcall-aixdesc* *mlittle/*mcall-aixdesc*}
と設定する。

@findex MULTILIB_EXTRA_OPTS
@item MULTILIB_EXTRA_OPTS
複数のバージョンの @file{libgcc.a} を構築する時、ある決まったオプション
群を常に GCC にわたすべきであるという場合が時々ある。
その場合は、@code{MULTILIB_EXTRA_OPTS} に、構築するときに必ず使われる
オプションのリストを設定する。
@end table

@node Host Fragment
@section Host Makefile Fragments
@cindex host makefile fragment
@cindex @file{x-@var{host}}

ホスト向けの Makefile の断片である、@file{x-@var{host}} では、
@file{Makefile} で使用される、ホスト依存の特別な変数と make のターゲットを
定義している。

@table @code
@findex CC
@item CC
第一ステージのコンパイルに使うコンパイラ。

@findex CLIB
@item CLIB
そのホストで必要となるライブラリ。

@findex OLDCC
@item OLDCC
ネイティブのコンパイルで、@file{libgcc1.a} を作る際に使うコンパイラ。

@findex OLDAR
@item OLDAR
ネイティブのコンパイルで、@file{libgcc1.a} を作るのに使う @code{ar} コマンド。

@findex INSTALL
@item INSTALL
使用すべきインストールコマンド。
@end table

